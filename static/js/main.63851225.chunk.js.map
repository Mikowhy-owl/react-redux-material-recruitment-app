{"version":3,"sources":["redux/actions/index.js","components/TopBar.js","views/Home.js","views/Image.js","views/NoPage.js","App.js","redux/reducers/imagesReducer.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["setImages","imagesArray","type","payload","setPageNumber","pageNumber","useStyles","makeStyles","theme","createStyles","topBar","paddingTop","spacing","paddingBottom","marginBottom","appName","cursor","TopBar","classes","history","useHistory","dispatch","useDispatch","showImagesState","useSelector","state","images","showImages","Grid","item","container","justify","className","xs","Typography","variant","onClick","replace","Button","color","show","mainContainer","marginTop","cardImage","height","Home","data","page","imagesPerPage","useState","isLoading","setIsLoading","loadingError","setLoadingError","useEffect","fetch","then","res","json","catch","length","map","image","md","lg","Card","CardActionArea","push","id","CardMedia","component","src","title","CardContent","gutterBottom","author","width","CircularProgress","TablePagination","count","onChangePage","event","newPage","rowsPerPage","onChangeRowsPerPage","setImagesPerPage","parseInt","target","value","rowsPerPageOptions","labelRowsPerPage","breakpoints","down","navigationIconsMobileContainer","goBackIconContainer","goBackIcon","marginRight","Image","params","useParams","imageData","setImageData","isMobile","useMediaQuery","imageId","isActualImageInStore","find","x","getImage","sm","alignItems","alt","Link","href","url","direction","NoPage","padding","App","exact","path","imagesReducer","action","rootReducer","combineReducers","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.63851225.chunk.js","sourcesContent":["export const setImages = (imagesArray) => ({\n  type: \"SET_IMAGES\",\n  payload: {\n    imagesArray,\n  },\n});\n\nexport const showImages = (show) => ({\n  type: \"SHOW_IMAGES\",\n  payload: {\n    show,\n  },\n});\n\nexport const setPageNumber = (pageNumber) => ({\n  type: \"SET_PAGE_NUMBER\",\n  payload: {\n    pageNumber,\n  },\n});\n\nexport const setImagesPerPage = (imagesPerPage) => ({\n  type: \"SET_IMAGES_PER_PAGE\",\n  payload: {\n    imagesPerPage,\n  },\n});\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { showImages } from \"../redux/actions\";\n\nfunction TopBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showImagesState = useSelector((state) => state.images.showImages);\n\n  return (\n    <Grid item container justify=\"center\" className={classes.topBar}>\n      <Grid item container xs={10}>\n        <Grid item xs={4}>\n          <Typography\n            className={classes.appName}\n            variant=\"h6\"\n            onClick={() => history.replace(\"/\")}\n          >\n            Appname\n          </Typography>\n        </Grid>\n        <Grid container item xs={8} justify=\"flex-end\">\n          <Grid item>\n            <Button\n              color={!showImagesState ? \"primary\" : \"secondary\"}\n              variant=\"contained\"\n              onClick={() => {\n                dispatch(showImages());\n              }}\n            >\n              {!showImagesState ? \"Enable\" : \"Disable\"} images\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    topBar: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n    appName: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\nexport default TopBar;\n","import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Grid,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport TopBar from \"../components/TopBar\";\nimport { setImages, setImagesPerPage, setPageNumber } from \"../redux/actions\";\n\nconst Home = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.images.imagesArray);\n  const showImagesState = useSelector((state) => state.images.showImages);\n  const page = useSelector((state) => state.images.pageNumber);\n  const imagesPerPage = useSelector((state) => state.images.imagesPerPage);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://picsum.photos/v2/list?page=${page + 1}&limit=${imagesPerPage}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        dispatch(setImages(res));\n        setLoadingError(null);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        dispatch(setImages(null));\n        setLoadingError(\"There was an error loading data.\");\n        setIsLoading(false);\n      });\n  }, [page, imagesPerPage, dispatch]);\n\n  const handleChangePage = (event, newPage) => {\n    dispatch(setPageNumber(newPage));\n  };\n\n  const handleChangeImagesPerPage = (event) => {\n    dispatch(setImagesPerPage(parseInt(event.target.value, 10)));\n    dispatch(setPageNumber(0));\n  };\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <TopBar />\n      <Grid item container justify=\"center\">\n        <Grid container item xs={10}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Grid container justify=\"center\" spacing={6}>\n                {data?.length && !isLoading ? (\n                  <>\n                    {data.map((image) => (\n                      <Grid key={image.id} item xs={12} md={6} lg={4}>\n                        <Card>\n                          <CardActionArea\n                            onClick={() => history.push(`/image/${image.id}`)}\n                          >\n                            <CardMedia\n                              key={page}\n                              className={classes.cardImage}\n                              component=\"img\"\n                              src={\n                                !showImagesState\n                                  ? \"https://globalhygiene.pl/wp-content/uploads/2018/07/blank-product-600x600.jpg\"\n                                  : `https://picsum.photos/id/${image.id}/1000/300`\n                              }\n                              title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                              <Typography\n                                gutterBottom\n                                variant=\"h5\"\n                                component=\"h2\"\n                              >\n                                {image.author}\n                              </Typography>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                              >\n                                Original width: {image.width} px <br />\n                                Original height: {image.height} px\n                              </Typography>\n                            </CardContent>\n                          </CardActionArea>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </>\n                ) : (\n                  <Grid container justify=\"center\" spacing={10}>\n                    <Grid item>\n                      {loadingError ? (\n                        <Typography variant=\"h6\" color=\"error\">\n                          {loadingError}\n                        </Typography>\n                      ) : (\n                        <CircularProgress />\n                      )}\n                    </Grid>\n                  </Grid>\n                )}\n                {!loadingError ? (\n                  <TablePagination\n                    component=\"div\"\n                    count={-1}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    rowsPerPage={imagesPerPage}\n                    onChangeRowsPerPage={handleChangeImagesPerPage}\n                    rowsPerPageOptions={[6, 12, 21, 42]}\n                    labelRowsPerPage=\"Per page\"\n                  />\n                ) : null}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    mainContainer: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    cardImage: {\n      height: \"260px\",\n    },\n  })\n);\n\nexport default Home;\n","import {\n  Button,\n  CircularProgress,\n  Grid,\n  Link,\n  Typography,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport GoBackIcon from \"@material-ui/icons/Reply\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport TopBar from \"../components/TopBar\";\n\nconst Image = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams();\n\n  const [imageData, setImageData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(null);\n\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  const images = useSelector((state) => state.images.imagesArray);\n  const showImagesState = useSelector((state) => state.images.showImages);\n\n  const imageId = params.id;\n\n  useEffect(() => {\n    const isActualImageInStore = images.find((x) => x.id === imageId);\n\n    setIsLoading(true);\n\n    if (isActualImageInStore) {\n      setImageData(isActualImageInStore);\n      setLoadingError(null);\n      setIsLoading(false);\n    } else {\n      getImage();\n    }\n  }, [imageId, images]);\n\n  const getImage = () => {\n    fetch(`https://picsum.photos/id/${imageId}/info`)\n      .then((res) => res.json())\n      .then((res) => {\n        setImageData(res);\n        setLoadingError(null);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setLoadingError(\n          \"There was problem fetching data or there is no image with that id. Try again.\"\n        );\n        setImageData(null);\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <TopBar />\n      <Grid container justify=\"center\">\n        <Grid container item sm={10}>\n          {imageData && !isLoading ? (\n            <Grid container>\n              <Grid item container justify=\"center\" alignItems=\"center\">\n                {!isMobile ? (\n                  <Grid container item xs={1} justify=\"center\">\n                    <Grid item>\n                      <Button\n                        onClick={() =>\n                          history.push(`/image/${parseInt(imageId) - 1}`)\n                        }\n                      >\n                        <NavigateBeforeIcon />\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ) : null}\n\n                <Grid item xs={10}>\n                  <img\n                    src={\n                      !showImagesState\n                        ? \"https://globalhygiene.pl/wp-content/uploads/2018/07/blank-product-600x600.jpg\"\n                        : `https://picsum.photos/id/${imageId}/1400/800`\n                    }\n                    alt={imageId}\n                    className={classes.image}\n                  />\n\n                  {isMobile ? (\n                    <Grid\n                      container\n                      item\n                      className={classes.navigationIconsMobileContainer}\n                    >\n                      <Grid item xs={6}>\n                        <Button\n                          variant=\"contained\"\n                          onClick={() =>\n                            history.push(`/image/${parseInt(imageId) - 1}`)\n                          }\n                        >\n                          Prev\n                        </Button>\n                      </Grid>\n                      <Grid container item xs={6} justify=\"flex-end\">\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            onClick={() =>\n                              history.push(`/image/${parseInt(imageId) + 1}`)\n                            }\n                          >\n                            Next\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  ) : null}\n\n                  <Grid container alignItems=\"center\">\n                    <Grid item xs={10}>\n                      <Typography variant=\"h5\">\n                        Author: {imageData.author}\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Original width: {imageData.width} px\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Original height: {imageData.height} px\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Link:{\" \"}\n                        <Link target=\"blank\" href={imageData.url}>\n                          {imageData.url}\n                        </Link>\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                {!isMobile ? (\n                  <Grid container item xs={1} justify=\"center\">\n                    <Grid item>\n                      <Button\n                        onClick={() =>\n                          history.push(`/image/${parseInt(imageId) + 1}`)\n                        }\n                      >\n                        <NavigateNextIcon />\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ) : null}\n\n                <Grid\n                  container\n                  item\n                  xs={10}\n                  justify=\"flex-end\"\n                  className={classes.goBackIconContainer}\n                >\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => history.replace(\"/\")}\n                  >\n                    <GoBackIcon className={classes.goBackIcon} />\n                    Go back\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid container direction=\"column\" spacing={2}>\n              {loadingError ? (\n                <>\n                  <Grid container item justify=\"center\">\n                    <Typography variant=\"h6\" color=\"error\">\n                      {loadingError}\n                    </Typography>\n                  </Grid>\n                  <Grid container item justify=\"center\" spacing={2}>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => history.replace(\"/\")}\n                      >\n                        Homepage\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() =>\n                          history.push(\n                            `/image/${imageId < 0 ? 0 : parseInt(imageId) + 1}`\n                          )\n                        }\n                      >\n                        Next image\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </>\n              ) : (\n                <CircularProgress />\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    mainContainer: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    image: {\n      width: \"100%\",\n      height: \"700px\",\n      [theme.breakpoints.down(\"lg\")]: {\n        height: \"550px\",\n      },\n      [theme.breakpoints.down(\"md\")]: {\n        height: \"400px\",\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        height: \"200px\",\n      },\n      marginBottom: theme.spacing(2),\n      boxShadow: \"5px 5px 15px -8px #000000\",\n    },\n    navigationIconsMobileContainer: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    goBackIconContainer: {\n      marginTop: theme.spacing(3),\n    },\n    goBackIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nexport default Image;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NoPage() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.container}\n        direction=\"column\"\n        spacing={2}\n      >\n        <Grid item>\n          <Typography variant=\"h4\">\n            404 | This page could not be found.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => history.replace(\"/\")}\n          >\n            Go back to main page\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      height: \"100vh\",\n      padding: theme.spacing(2),\n    },\n  })\n);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./views/Home\";\nimport Image from \"./views/Image\";\nimport NoPage from \"./views/NoPage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/image/:id\">\n          <Image />\n        </Route>\n        <Route>\n          <NoPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const imagesReducer = (\n  state = {\n    imagesArray: [],\n    showImages: true,\n    pageNumber: 0,\n    imagesPerPage: 6,\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_IMAGES\":\n      if (action.payload.imagesArray) {\n        return { ...state, imagesArray: [...action.payload.imagesArray] };\n      } else return { ...state, imagesArray: [] };\n    case \"SHOW_IMAGES\":\n      return { ...state, showImages: !state.showImages };\n    case \"SET_PAGE_NUMBER\":\n      return { ...state, pageNumber: action.payload.pageNumber };\n    case \"SET_IMAGES_PER_PAGE\":\n      return { ...state, imagesPerPage: action.payload.imagesPerPage };\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;\n","import { combineReducers } from \"redux\";\nimport imagesReducer from \"./imagesReducer\";\n\nconst rootReducer = combineReducers({\n  images: imagesReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\n// convert object to string and store in localStorage\nconst saveToLocalStorage = (state) => {\n  try {\n    const serialisedState = JSON.stringify(state);\n    localStorage.setItem(\"persistantState\", serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\n// load string from localStarage and convert into an Object\n// invalid output must be undefined\nconst loadFromLocalStorage = () => {\n  try {\n    const serialisedState = localStorage.getItem(\"persistantState\");\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n};\n\n// create our store from our rootReducers and use loadFromLocalStorage\n// to overwrite any values that we already have saved\nconst store = createStore(\n  rootReducer,\n  loadFromLocalStorage()\n  // Add extension for dev\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// listen for store changes and use saveToLocalStorage to\n// save them to localStorage\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
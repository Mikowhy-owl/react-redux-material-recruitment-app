{"version":3,"sources":["components/image/index.js","redux/actions/index.js","components/topBar.js","views/Home.js","components/homeButton.js","components/image/imageDescription.js","components/image/imageError.js","components/navigationButton.js","components/image/mobileNavigationButtons.js","views/Image.js","views/NoPage.js","App.js","redux/reducers/imagesReducer.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","cardImage","height","Image","image","page","showImagesState","classes","history","useHistory","Grid","item","xs","md","lg","Card","CardActionArea","onClick","push","id","CardMedia","className","component","src","title","CardContent","Typography","gutterBottom","variant","author","color","width","setImages","imagesArray","type","payload","setPageNumber","pageNumber","theme","topBar","paddingTop","spacing","paddingBottom","marginBottom","appName","cursor","TopBar","dispatch","useDispatch","useSelector","state","images","showImages","container","justify","replace","Button","show","mainContainer","marginTop","Home","data","imagesPerPage","useState","isLoading","setIsLoading","loadingError","setLoadingError","useEffect","fetch","then","res","json","catch","finally","length","map","CircularProgress","TablePagination","count","onChangePage","event","newPage","rowsPerPage","onChangeRowsPerPage","setImagesPerPage","parseInt","target","value","rowsPerPageOptions","labelRowsPerPage","goBackIconContainer","goBackIcon","marginRight","HomeButton","ImageDescription","imageData","alignItems","Link","href","url","ImageError","imageId","NavigationButton","navigationIconsMobileContainer","MobileNavigationButtons","breakpoints","down","params","useParams","setImageData","isMobile","useMediaQuery","isActualImageInStore","find","x","getImage","sm","alt","direction","NoPage","padding","App","exact","path","imagesReducer","action","rootReducer","combineReducers","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c8f7c82a.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Image = ({ image, page, showImagesState }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid key={image.id} item xs={12} md={6} lg={4}>\r\n      <Card>\r\n        <CardActionArea onClick={() => history.push(`/image/${image.id}`)}>\r\n          <CardMedia\r\n            key={page}\r\n            className={classes.cardImage}\r\n            component=\"img\"\r\n            src={\r\n              !showImagesState\r\n                ? \"https://globalhygiene.pl/wp-content/uploads/2018/07/blank-product-600x600.jpg\"\r\n                : `https://picsum.photos/id/${image.id}/1000/300`\r\n            }\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {image.author}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Original width: {image.width} px <br />\r\n              Original height: {image.height} px\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    cardImage: {\r\n      height: \"260px\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default Image;\r\n","export const setImages = (imagesArray) => ({\n  type: \"SET_IMAGES\",\n  payload: {\n    imagesArray,\n  },\n});\n\nexport const showImages = (show) => ({\n  type: \"SHOW_IMAGES\",\n  payload: {\n    show,\n  },\n});\n\nexport const setPageNumber = (pageNumber) => ({\n  type: \"SET_PAGE_NUMBER\",\n  payload: {\n    pageNumber,\n  },\n});\n\nexport const setImagesPerPage = (imagesPerPage) => ({\n  type: \"SET_IMAGES_PER_PAGE\",\n  payload: {\n    imagesPerPage,\n  },\n});\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { showImages } from \"../redux/actions\";\r\n\r\nconst TopBar = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const showImagesState = useSelector((state) => state.images.showImages);\r\n\r\n  return (\r\n    <Grid item container justify=\"center\" className={classes.topBar}>\r\n      <Grid item container xs={10}>\r\n        <Grid item xs={4}>\r\n          <Typography\r\n            className={classes.appName}\r\n            variant=\"h6\"\r\n            onClick={() => history.replace(\"/\")}\r\n          >\r\n            Appname\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container item xs={8} justify=\"flex-end\">\r\n          <Grid item>\r\n            <Button\r\n              color={!showImagesState ? \"primary\" : \"secondary\"}\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                dispatch(showImages());\r\n              }}\r\n            >\r\n              {!showImagesState ? \"Enable\" : \"Disable\"} images\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    topBar: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    appName: {\r\n      cursor: \"pointer\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default TopBar;\r\n","import {\n  CircularProgress,\n  Grid,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Image from \"../components/image\";\nimport TopBar from \"../components/topBar\";\nimport { setImages, setImagesPerPage, setPageNumber } from \"../redux/actions\";\n\nconst Home = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.images.imagesArray);\n  const showImagesState = useSelector((state) => state.images.showImages);\n  const page = useSelector((state) => state.images.pageNumber);\n  const imagesPerPage = useSelector((state) => state.images.imagesPerPage);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://picsum.photos/v2/list?page=${page + 1}&limit=${imagesPerPage}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        dispatch(setImages(res));\n        setLoadingError(null);\n      })\n      .catch(() => {\n        dispatch(setImages(null));\n        setLoadingError(\"There was an error loading data.\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [page, imagesPerPage, dispatch]);\n\n  const handleChangePage = (event, newPage) => {\n    dispatch(setPageNumber(newPage));\n  };\n\n  const handleChangeImagesPerPage = (event) => {\n    dispatch(setImagesPerPage(parseInt(event.target.value, 10)));\n    dispatch(setPageNumber(0));\n  };\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <TopBar />\n      <Grid item container justify=\"center\">\n        <Grid container item xs={10}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Grid container justify=\"center\" spacing={6}>\n                {data?.length && !isLoading ? (\n                  <>\n                    {data.map((image) => (\n                      <Image\n                        image={image}\n                        page={page}\n                        showImagesState={showImagesState}\n                      />\n                    ))}\n                  </>\n                ) : (\n                  <Grid container justify=\"center\" spacing={10}>\n                    <Grid item>\n                      {loadingError ? (\n                        <Typography variant=\"h6\" color=\"error\">\n                          {loadingError}\n                        </Typography>\n                      ) : (\n                        <CircularProgress />\n                      )}\n                    </Grid>\n                  </Grid>\n                )}\n                {!loadingError ? (\n                  <TablePagination\n                    component=\"div\"\n                    count={-1}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    rowsPerPage={imagesPerPage}\n                    onChangeRowsPerPage={handleChangeImagesPerPage}\n                    rowsPerPageOptions={[6, 12, 21, 42]}\n                    labelRowsPerPage=\"Per page\"\n                  />\n                ) : null}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    mainContainer: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n  })\n);\n\nexport default Home;\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport GoBackIcon from \"@material-ui/icons/Reply\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst HomeButton = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      xs={10}\r\n      justify=\"flex-end\"\r\n      className={classes.goBackIconContainer}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onClick={() => history.replace(\"/\")}\r\n      >\r\n        <GoBackIcon className={classes.goBackIcon} />\r\n        Home\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    goBackIconContainer: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    goBackIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nexport default HomeButton;\r\n","import { Grid, Link, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ImageDescription = ({ imageData }) => {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\">Author: {imageData.author}</Typography>\r\n        <Typography variant=\"body1\">\r\n          Original width: {imageData.width} px\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Original height: {imageData.height} px\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          Link:{\" \"}\r\n          <Link target=\"blank\" href={imageData.url}>\r\n            {imageData.url}\r\n          </Link>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ImageDescription;\r\n","import React from \"react\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ImageError = ({ loadingError, imageId }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Grid container item justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          {loadingError}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid container item justify=\"center\" spacing={2}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={() => history.replace(\"/\")}>\r\n            Homepage\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() =>\r\n              history.push(`/image/${imageId < 0 ? 0 : parseInt(imageId) + 1}`)\r\n            }\r\n          >\r\n            Next image\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageError;\r\n","import { Button } from \"@material-ui/core\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavigationButton = ({ type, url }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Button onClick={() => history.push(url)}>\r\n      {type === \"prev\" ? <NavigateBeforeIcon /> : <NavigateNextIcon />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default NavigationButton;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport NavigationButton from \"../navigationButton\";\r\n\r\nconst MobileNavigationButtons = ({ imageId }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container item className={classes.navigationIconsMobileContainer}>\r\n      <Grid item xs={6}>\r\n        <NavigationButton type=\"prev\" url={`/image/${parseInt(imageId) - 1}`} />\r\n      </Grid>\r\n      <Grid container item xs={6} justify=\"flex-end\">\r\n        <Grid item>\r\n          <NavigationButton\r\n            type=\"next\"\r\n            url={`/image/${parseInt(imageId) + 1}`}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    navigationIconsMobileContainer: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nexport default MobileNavigationButtons;\r\n","import { CircularProgress, Grid } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport HomeButton from \"../components/homeButton\";\nimport ImageDescription from \"../components/image/imageDescription\";\nimport ImageError from \"../components/image/imageError\";\nimport MobileNavigationButtons from \"../components/image/mobileNavigationButtons\";\nimport NavigationButton from \"../components/navigationButton\";\nimport TopBar from \"../components/topBar\";\n\nconst Image = () => {\n  const classes = useStyles();\n  const params = useParams();\n\n  const [imageData, setImageData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(null);\n\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  const images = useSelector((state) => state.images.imagesArray);\n  const showImagesState = useSelector((state) => state.images.showImages);\n\n  const imageId = params.id;\n\n  useEffect(() => {\n    const isActualImageInStore = images.find((x) => x.id === imageId);\n\n    setIsLoading(true);\n\n    if (isActualImageInStore) {\n      setImageData(isActualImageInStore);\n      setLoadingError(null);\n      setIsLoading(false);\n    } else {\n      getImage();\n    }\n  }, [imageId, images]);\n\n  const getImage = () => {\n    fetch(`https://picsum.photos/id/${imageId}/info`)\n      .then((res) => res.json())\n      .then((res) => {\n        setLoadingError(null);\n        setImageData(res);\n      })\n      .catch(() => {\n        setLoadingError(\n          \"There was problem fetching data or there is no image with that id. Try again.\"\n        );\n        setImageData(null);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <TopBar />\n      <Grid container justify=\"center\">\n        <Grid container item sm={10}>\n          {imageData && !isLoading ? (\n            <Grid container>\n              <Grid item container justify=\"center\" alignItems=\"center\">\n                {!isMobile ? (\n                  <Grid container item xs={1} justify=\"center\">\n                    <Grid item>\n                      <NavigationButton\n                        type=\"prev\"\n                        url={`/image/${parseInt(imageId) - 1}`}\n                      />\n                    </Grid>\n                  </Grid>\n                ) : null}\n\n                <Grid item xs={10}>\n                  <img\n                    src={\n                      !showImagesState\n                        ? \"https://globalhygiene.pl/wp-content/uploads/2018/07/blank-product-600x600.jpg\"\n                        : `https://picsum.photos/id/${imageId}/1400/800`\n                    }\n                    alt={imageId}\n                    className={classes.image}\n                  />\n\n                  {isMobile ? (\n                    <MobileNavigationButtons imageId={imageId} />\n                  ) : null}\n\n                  <ImageDescription imageData={imageData} />\n                </Grid>\n\n                {!isMobile ? (\n                  <Grid container item xs={1} justify=\"center\">\n                    <Grid item>\n                      <NavigationButton\n                        type=\"next\"\n                        url={`/image/${parseInt(imageId) + 1}`}\n                      />\n                    </Grid>\n                  </Grid>\n                ) : null}\n\n                <HomeButton />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid container direction=\"column\" spacing={2}>\n              {loadingError ? (\n                <ImageError loadingError={loadingError} imageId={imageId} />\n              ) : (\n                <CircularProgress />\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    mainContainer: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    image: {\n      width: \"100%\",\n      height: \"700px\",\n      [theme.breakpoints.down(\"lg\")]: {\n        height: \"550px\",\n      },\n      [theme.breakpoints.down(\"md\")]: {\n        height: \"400px\",\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        height: \"200px\",\n      },\n      marginBottom: theme.spacing(2),\n      boxShadow: \"5px 5px 15px -8px #000000\",\n    },\n  })\n);\n\nexport default Image;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NoPage() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.container}\n        direction=\"column\"\n        spacing={2}\n      >\n        <Grid item>\n          <Typography variant=\"h4\">\n            404 | This page could not be found.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => history.replace(\"/\")}\n          >\n            Go back to main page\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      height: \"100vh\",\n      padding: theme.spacing(2),\n    },\n  })\n);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./views/Home\";\nimport Image from \"./views/Image\";\nimport NoPage from \"./views/NoPage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/image/:id\">\n          <Image />\n        </Route>\n        <Route>\n          <NoPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const imagesReducer = (\n  state = {\n    imagesArray: [],\n    showImages: true,\n    pageNumber: 0,\n    imagesPerPage: 6,\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_IMAGES\":\n      if (action.payload.imagesArray) {\n        return { ...state, imagesArray: [...action.payload.imagesArray] };\n      } else return { ...state, imagesArray: [] };\n    case \"SHOW_IMAGES\":\n      return { ...state, showImages: !state.showImages };\n    case \"SET_PAGE_NUMBER\":\n      return { ...state, pageNumber: action.payload.pageNumber };\n    case \"SET_IMAGES_PER_PAGE\":\n      return { ...state, imagesPerPage: action.payload.imagesPerPage };\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;\n","import { combineReducers } from \"redux\";\nimport imagesReducer from \"./imagesReducer\";\n\nconst rootReducer = combineReducers({\n  images: imagesReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\n// convert object to string and store in localStorage\nconst saveToLocalStorage = (state) => {\n  try {\n    const serialisedState = JSON.stringify(state);\n    localStorage.setItem(\"persistantState\", serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\n// load string from localStarage and convert into an Object\n// invalid output must be undefined\nconst loadFromLocalStorage = () => {\n  try {\n    const serialisedState = localStorage.getItem(\"persistantState\");\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n};\n\n// create our store from our rootReducers and use loadFromLocalStorage\n// to overwrite any values that we already have saved\nconst store = createStore(\n  rootReducer,\n  loadFromLocalStorage()\n  // Add extension for dev\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// listen for store changes and use saveToLocalStorage to\n// save them to localStorage\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}